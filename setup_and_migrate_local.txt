(base) ngg@NGG:~$ ssh root@162.255.85.253
root@162.255.85.253's password: 
Welcome to Ubuntu 22.04.2 LTS (GNU/Linux 5.15.0-71-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Wed May 10 08:50:32 AM UTC 2023

  System load:                      0.0908203125
  Usage of /:                       20.6% of 76.17GB
  Memory usage:                     61%
  Swap usage:                       32%
  Processes:                        344
  Users logged in:                  1
  IPv4 address for br-d242273406b7: 172.20.0.1
  IPv4 address for docker0:         172.17.0.1
  IPv4 address for ens192:          162.255.85.253

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Expanded Security Maintenance for Applications is not enabled.

0 updates can be applied immediately.

17 additional security updates can be applied with ESM Apps.
Learn more about enabling ESM Apps service at https://ubuntu.com/esm


Last login: Tue May  9 21:43:44 2023 from 172.93.132.72
root@localhost:~# cd ..
root@localhost:/# ls
bin   dev  home  lib32  libx32      media  opt   root  sbin  srv  tmp  var
boot  etc  lib   lib64  lost+found  mnt    proc  run   snap  sys  usr
root@localhost:/# cd home
root@localhost:/home# ls
coder  ngg  ubuntu
root@localhost:/home# cd coder
root@localhost:/home/coder# ls
django_project  venv
root@localhost:/home/coder# source venv/bin/activate
(venv) root@localhost:/home/coder# ls
django_project  venv
(venv) root@localhost:/home/coder# cd django_project
(venv) root@localhost:/home/coder/django_project# ls
compose           locale                                 README.md
config            local.yml                              requirements
CONTRIBUTORS.txt  manage.py                              setup.cfg
django_project    merge_production_dotenvs_in_dotenv.py  tests
docs              production.yml
LICENSE           pyproject.toml
(venv) root@localhost:/home/coder/django_project# docker-compose -f local.yml up -d --build
Building postgres
[+] Building 0.7s (9/9) FINISHED                                                
 => [internal] load .dockerignore                                          0.0s
 => => transferring context: 174B                                          0.0s
 => [internal] load build definition from Dockerfile                       0.0s
 => => transferring dockerfile: 266B                                       0.0s
 => [internal] load metadata for docker.io/library/postgres:14             0.5s
 => [internal] load build context                                          0.0s
 => => transferring context: 5.02kB                                        0.0s
 => [1/4] FROM docker.io/library/postgres:14@sha256:5ac16ee311340b09e3670  0.0s
 => CACHED [2/4] COPY ./compose/production/postgres/maintenance /usr/loca  0.0s
 => CACHED [3/4] RUN chmod +x /usr/local/bin/maintenance/*                 0.0s
 => CACHED [4/4] RUN mv /usr/local/bin/maintenance/* /usr/local/bin     &  0.0s
 => exporting to image                                                     0.0s
 => => exporting layers                                                    0.0s
 => => writing image sha256:3d98e59ef81a7295e9a61ad977a2f59a9d730036a1f71  0.0s
 => => naming to docker.io/library/django_project_production_postgres      0.0s
Building django
[+] Building 0.7s (20/20) FINISHED                                              
 => [internal] load build definition from Dockerfile                       0.0s
 => => transferring dockerfile: 1.86kB                                     0.0s
 => [internal] load .dockerignore                                          0.0s
 => => transferring context: 174B                                          0.0s
 => [internal] load metadata for docker.io/library/python:3.11.3-slim-bul  0.4s
 => [internal] load build context                                          0.1s
 => => transferring context: 382.00kB                                      0.1s
 => [python 1/1] FROM docker.io/library/python:3.11.3-slim-bullseye@sha25  0.0s
 => CACHED [python-run-stage  1/11] WORKDIR /app                           0.0s
 => CACHED [python-run-stage  2/11] RUN apt-get update && apt-get install  0.0s
 => CACHED [python-build-stage 1/3] RUN apt-get update && apt-get install  0.0s
 => CACHED [python-build-stage 2/3] COPY ./requirements .                  0.0s
 => CACHED [python-build-stage 3/3] RUN pip wheel --wheel-dir /usr/src/ap  0.0s
 => CACHED [python-run-stage  3/11] COPY --from=python-build-stage /usr/s  0.0s
 => CACHED [python-run-stage  4/11] RUN pip install --no-cache-dir --no-i  0.0s
 => CACHED [python-run-stage  5/11] COPY ./compose/production/django/entr  0.0s
 => CACHED [python-run-stage  6/11] RUN sed -i 's/\r$//g' /entrypoint      0.0s
 => CACHED [python-run-stage  7/11] RUN chmod +x /entrypoint               0.0s
 => CACHED [python-run-stage  8/11] COPY ./compose/local/django/start /st  0.0s
 => CACHED [python-run-stage  9/11] RUN sed -i 's/\r$//g' /start           0.0s
 => CACHED [python-run-stage 10/11] RUN chmod +x /start                    0.0s
 => [python-run-stage 11/11] COPY . /app                                   0.1s
 => exporting to image                                                     0.1s
 => => exporting layers                                                    0.1s
 => => writing image sha256:2502253a2d5195de8dee84e38778826150cac20ef043f  0.0s
 => => naming to docker.io/library/django_project_local_django             0.0s
Building docs
[+] Building 0.2s (16/16) FINISHED                                              
 => [internal] load build definition from Dockerfile                       0.0s
 => => transferring dockerfile: 1.82kB                                     0.0s
 => [internal] load .dockerignore                                          0.0s
 => => transferring context: 174B                                          0.0s
 => [internal] load metadata for docker.io/library/python:3.11.3-slim-bul  0.1s
 => [internal] load build context                                          0.0s
 => => transferring context: 305B                                          0.0s
 => [python 1/1] FROM docker.io/library/python:3.11.3-slim-bullseye@sha25  0.0s
 => CACHED [python-run-stage 1/7] RUN apt-get update && apt-get install -  0.0s
 => CACHED [python-build-stage 1/3] RUN apt-get update && apt-get install  0.0s
 => CACHED [python-build-stage 2/3] COPY ./requirements /requirements      0.0s
 => CACHED [python-build-stage 3/3] RUN pip wheel --no-cache-dir --wheel-  0.0s
 => CACHED [python-run-stage 2/7] COPY --from=python-build-stage /usr/src  0.0s
 => CACHED [python-run-stage 3/7] RUN pip install --no-cache /wheels/*     0.0s
 => CACHED [python-run-stage 4/7] COPY ./compose/local/docs/start /start-  0.0s
 => CACHED [python-run-stage 5/7] RUN sed -i 's/\r$//g' /start-docs        0.0s
 => CACHED [python-run-stage 6/7] RUN chmod +x /start-docs                 0.0s
 => CACHED [python-run-stage 7/7] WORKDIR /docs                            0.0s
 => exporting to image                                                     0.0s
 => => exporting layers                                                    0.0s
 => => writing image sha256:a86393c49628189e11f415946613ab4c4391f4d019fb1  0.0s
 => => naming to docker.io/library/django_project_local_docs               0.0s
django_project_local_docs is up-to-date
django_project_local_postgres is up-to-date
Recreating django_project_local_django ... done
(venv) root@localhost:/home/coder/django_project# docker ps -a
CONTAINER ID   IMAGE                                COMMAND                  CREATED         STATUS                  PORTS                                       NAMES
f9dd982f1e66   django_project_local_django          "/entrypoint /start"     8 seconds ago   Up 6 seconds            0.0.0.0:8000->8000/tcp, :::8000->8000/tcp   django_project_local_django
51bc84a47926   django_project_production_postgres   "docker-entrypoint.sâ€¦"   5 hours ago     Up 5 hours              5432/tcp                                    django_project_local_postgres
448e473c4828   django_project_local_docs            "/start-docs"            5 hours ago     Up 5 hours              0.0.0.0:9000->9000/tcp, :::9000->9000/tcp   django_project_local_docs
4b5511de28c7   hello-world                          "/hello"                 7 days ago      Exited (0) 7 days ago                                               blissful_lederberg
(venv) root@localhost:/home/coder/django_project# docker-compose -f local.yml run --rm django python manage.py migrate
Creating django_project_django_run ... done
PostgreSQL is available
Operations to perform:
  Apply all migrations: account, admin, auth, authtoken, contenttypes, sessions, sites, socialaccount, users
Running migrations:
  No migrations to apply.
(venv) root@localhost:/home/coder/django_project# docker-compose -f local.yml run --rm django python manage.py collectstatic
Creating django_project_django_run ... done
PostgreSQL is available

184 static files copied to '/app/staticfiles'.
(venv) root@localhost:/home/coder/django_project# docker-compose -f local.yml run --rm django python manage.py migrate
Creating django_project_django_run ... done
PostgreSQL is available
Operations to perform:
  Apply all migrations: account, admin, auth, authtoken, contenttypes, sessions, sites, socialaccount, users
Running migrations:
  No migrations to apply.
(venv) root@localhost:/home/coder/django_project# git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   django_project/templates/base.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	django_project/static/css/style.css
	django_project/static/img/

no changes added to commit (use "git add" and/or "git commit -a")
(venv) root@localhost:/home/coder/django_project# git add -A
(venv) root@localhost:/home/coder/django_project# git commit -m "second commit, setup base bootstrap to modify, css not fully working"
[master a1ac834] second commit, setup base bootstrap to modify, css not fully working
 5 files changed, 430 insertions(+), 2 deletions(-)
 create mode 100644 django_project/static/css/style.css
 create mode 100644 django_project/static/img/fundamentals.svg
 create mode 100644 django_project/static/img/react.svg
 create mode 100644 django_project/static/img/showcase.svg
(venv) root@localhost:/home/coder/django_project# 

